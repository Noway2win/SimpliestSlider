{"version":3,"sources":["webpack://simpleslider/./js/slider.js","webpack://simpleslider/webpack/bootstrap","webpack://simpleslider/webpack/runtime/define property getters","webpack://simpleslider/webpack/runtime/hasOwnProperty shorthand","webpack://simpleslider/webpack/runtime/make namespace object","webpack://simpleslider/./js/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,4DAA4D,SAAS,mBAAmB,eAAe;AACvG;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,uDAAuD,IAAI,SAAS,wBAAwB;AAC5F,6EAA6E,6CAA6C;AAC1H,iCAAiC,2CAA2C;AAC5E;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,gEAAgE,SAAS;AACzE;AACA,2DAA2D,sBAAsB,oBAAoB;AACrG,kCAAkC,sBAAsB,oBAAoB;AAC5E,kCAAkC,sBAAsB;AACxD,mCAAmC,sBAAsB;AACzD;AACA,sDAAsD,sBAAsB;AAC5E,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,gEAAgE,sBAAsB;AACtF,gEAAgE,sBAAsB;AACtF,gEAAgE,sBAAsB;AACtF,gEAAgE,sBAAsB;AACtF;AACA;AACA;AACA,wDAAwD,uBAAuB;AAC/E,kCAAkC,qBAAqB;AACvD;AACA,2BAA2B,gFAAgF;AAC3G,gEAAgE,aAAa,gBAAgB,UAAU,mCAAmC,WAAW,iBAAiB,aAAa;AACnL,gEAAgE,cAAc,gBAAgB,SAAS,6BAA6B,QAAQ,iBAAiB,aAAa;AAC1K,gEAAgE,cAAc,gBAAgB,OAAO,8BAA8B,WAAW,aAAa;AAC3J,6CAA6C,YAAY;AACzD,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,+DAA+D,OAAO;AACtE,kDAAkD,WAAW;AAC7D,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,+DAA+D,OAAO;AACtE,kDAAkD,WAAW;AAC7D,qBAAqB;AACrB,iBAAiB;AACjB;AACA,yCAAyC,EAAE;AAC3C;AACA,2DAA2D,aAAa,sBAAsB,cAAc,oBAAoB;AAChI,sDAAsD,EAAE;AACxD;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D,4DAA4D,sBAAsB;AAClF,4DAA4D,sBAAsB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,2DAA2D,OAAO;AAClE,8CAA8C,WAAW;AACzD,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,C;;;;;;UCrJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACJkB;AAClB;AACA,IAAI,qDAAY;AAChB;AACA;AACA,KAAK;AACL,IAAI,qDAAY;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC,E","file":"bundle.js","sourcesContent":["export function createSlider({\r\n    parent,\r\n    url,\r\n    autoplay = false,\r\n    delay = 15000\r\n}) {\r\n    console.log(delay);\r\n    class Slider {\r\n        constructor(parent, url) {\r\n            this.parent = document.querySelector(parent);\r\n            this.url = url;\r\n            this.imgArr = [];\r\n            this.pushImg();\r\n        }\r\n        static async getData(url) {\r\n            const imgData = await fetch(url).then((res) => {\r\n                if (res.ok) {\r\n                    return res;\r\n                } else {\r\n                    throw new Error(`Can not get data from${this.url}, message status ${imgData.status}`);\r\n                }\r\n            });\r\n            return await imgData.json();\r\n        }\r\n        static stringToNumber(str) {\r\n            let num = +str.replace(/\\D/g, '');\r\n            return num;\r\n        }\r\n        pushImg() {\r\n            Slider.getData(this.url).\r\n            then(data => {\r\n                    data.forEach(({\r\n                        src\r\n                    }) => {\r\n                        let slide = document.createElement('div');\r\n                        slide.innerHTML = `<img src =${src} alt= \"${src.match(/[^\\/]+$/)[0]}\">`;\r\n                        slide.querySelector('img').style.cssText = `height:${window.getComputedStyle(this.parent).height};\\n \r\n                        width: ${window.getComputedStyle(this.parent).width}`;\r\n                        this.imgArr.push(slide);\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    if (this.imgArr.length == 0) {\r\n                        throw new Error(`Can not get data from${this.url}. It is empty`);\r\n                    }\r\n                    this.parent.innerHTML = `<div class=\"${this.parent.classList}-slide-next\">&#8658;</div> \\n\r\n                    <div class=\"${this.parent.classList}-slide-prev\">&#8656;</div>\\n\r\n                    <div class=\"${this.parent.classList}-slider_inner\"></div>\r\n                    <div class= \"${this.parent.classList}-slider_counter\"><span id='cur'></span><span id='tot'></span></div>`;\r\n                    this.imgArr.forEach(elem => {\r\n                        this.parent.querySelector(`.${this.parent.classList}-slider_inner`).append(elem);\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    let offset = 0,\r\n                        slideIndex = 1;\r\n                    const inner = this.parent.querySelector(`.${this.parent.classList}-slider_inner`),\r\n                        nextBtn = this.parent.querySelector(`.${this.parent.classList}-slide-next`),\r\n                        prevBtn = this.parent.querySelector(`.${this.parent.classList}-slide-prev`),\r\n                        counter = this.parent.querySelector(`.${this.parent.classList}-slider_counter`),\r\n                        currentInd = counter.querySelector('#cur'),\r\n                        totalInd = counter.querySelector('#tot'),\r\n                        totalSlides = this.imgArr.length;\r\n                    inner.style.cssText = `height: 100%;background-color: blue;\\n\r\n                    display: flex;transition: 0.5s all;`;\r\n                    inner.style.width =\r\n                        `${Slider.stringToNumber(window.getComputedStyle(this.parent).width) * totalSlides}px`;\r\n                    nextBtn.style.cssText = 'position: absolute;color: white;font-size: 25px; top: 50%; transform: translate(-100%, -50%);left: 100%; cursor: pointer; z-index: 10;';\r\n                    prevBtn.style.cssText = 'position: absolute; color: white;font-size: 25px;top: 50%; transform: translateY(-50%);left: 0; cursor: pointer; z-index: 10;';\r\n                    counter.style.cssText = 'position: absolute; color: white;font-size: 25px;top: 0; transform: translateX(-100%);left: 100%; z-index: 10;';\r\n                    totalInd.innerText = `/${totalSlides}`;\r\n                    currentInd.innerText = `${slideIndex}`;\r\n                    nextBtn.addEventListener('click', () => {\r\n                        if (offset == Slider.stringToNumber(window.getComputedStyle(this.parent).width) * (totalSlides - 1)) {\r\n                            offset = 0;\r\n                            slideIndex = 1;\r\n                        } else {\r\n                            offset += Slider.stringToNumber(window.getComputedStyle(this.parent).width);\r\n                            slideIndex += 1;\r\n                        }\r\n                        inner.style.transform = `translateX(-${offset}px)`;\r\n                        currentInd.innerText = `${slideIndex}`;\r\n                    });\r\n                    prevBtn.addEventListener('click', () => {\r\n                        if (offset == 0) {\r\n                            offset = Slider.stringToNumber(window.getComputedStyle(this.parent).width) * (totalSlides - 1);\r\n                            slideIndex = totalSlides;\r\n                        } else {\r\n                            offset -= Slider.stringToNumber(window.getComputedStyle(this.parent).width);\r\n                            slideIndex -= 1;\r\n                        }\r\n                        inner.style.transform = `translateX(-${offset}px)`;\r\n                        currentInd.innerText = `${slideIndex}`;\r\n                    });\r\n                })\r\n                .catch((e) => {\r\n                    console.log(`error ${e}`);\r\n                    let errSlide = document.createElement('div');\r\n                    errSlide.style.cssText = `height: 100%; width: 100%; background-color:red; display:flex;align-items: center;justify-content: center`;\r\n                    errSlide.innerHTML = `<h2>Error ${e} <h2>`;\r\n                    this.parent.append(errSlide);\r\n                });\r\n        }\r\n    }\r\n\r\n    class AutoSlider extends Slider {\r\n        constructor(parent, url, delay) {\r\n            super(parent, url);\r\n            this.delay = delay;\r\n            this.checkDelay();\r\n            this.autoplay();\r\n        }\r\n        checkDelay() {\r\n            if (Number.isInteger(this.delay)) {\r\n                this.delay = this.delay;\r\n            } else {\r\n                this.delay = 3000;\r\n                console.log('У нас сработка');\r\n            }\r\n        }\r\n        autoplay() {\r\n            setTimeout(() => {\r\n                console.log(`I am autoSlider${this.imgArr}`);\r\n                const inner = this.parent.querySelector(`.${this.parent.classList}-slider_inner`),\r\n                    counter = this.parent.querySelector(`.${this.parent.classList}-slider_counter`),\r\n                    currentInd = counter.querySelector('#cur'),\r\n                    totalSlides = this.imgArr.length;\r\n                let offset = 0,\r\n                    slideIndex = 1;\r\n                setInterval(() => {\r\n                    if (offset == Slider.stringToNumber(window.getComputedStyle(this.parent).width) * (totalSlides - 1)) {\r\n                        offset = 0;\r\n                        slideIndex = 1;\r\n                    } else {\r\n                        offset += Slider.stringToNumber(window.getComputedStyle(this.parent).width);\r\n                        slideIndex += 1;\r\n                    }\r\n                    inner.style.transform = `translateX(-${offset}px)`;\r\n                    currentInd.innerText = `${slideIndex}`;\r\n                }, this.delay);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    if (!autoplay) {\r\n        new Slider(parent, url);\r\n    } else {\r\n        new AutoSlider(parent, url, delay);\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\r\n    createSlider\r\n} from './slider';\r\nwindow.addEventListener('DOMContentLoaded', function () {\r\n    createSlider({\r\n        parent: \".slider__wrapper\",\r\n        url: 'http://localhost:3000/slidersrc'\r\n    });\r\n    createSlider({\r\n        parent: \".slider2__wrapper\",\r\n        url: 'http://localhost:3000/slidersrc',\r\n        autoplay: true,\r\n        delay: 2000\r\n    });\r\n});"],"sourceRoot":""}